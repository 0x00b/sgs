
syntax = "proto3";

package proto.game;

//玩家信息
message Player
{
	int32 id = 1; 		
	string account = 2;
	string passwd = 3;		
	string name = 4;	
	string avatar = 5;
	int32 sex = 6;
	int32 exp = 7;
	int32 level = 8;	
	int32 status = 9;
	int32 gamestatus = 10;
	int32 seatid = 11;
	string registdate = 12;
	string remark = 13;
}

//客户端上行结构体
//请求登陆
message ReqLogin
{
	string account	= 1;
	string pwd	= 2;
}

//服务端下发结构体
//登录成功返回（单播）
message ReqLoginUc
{	
	int32 code = 1;	//返回码，0成功 1失败
	Player player = 2;
}

//请求退出游戏
message ReqLogout
{
	Player player = 1;
}
//玩家退出请求返回
message ReqLogoutUc
{
	int32 code = 1;
	string remark = 2;
}

message ReqRegist
{
	Player player = 1;
}
message ReqRegistUc
{
	int32 code = 1;
	Player player = 2;
}
message ReqUpdatePwd
{
	string account = 1;
	string oldpasswd = 2;
	string newpasswd = 3;
}
message ReqUpdatePwdUc
{
	int32 code = 1;
}
message ReqGetFriends
{
}
message ReqGetFriendsUc
{
	int32 code = 1;
	repeated Player frieds = 2;
}
message ReqAddFriends
{
	Player friend = 1;
}
message ReqAddFriendsUc
{
	int32 code = 1;
	Player friend = 2;
}
message ReqDeleteFriend
{
	Player friend = 1;
}
message ReqDeleteFriendUc
{
	int32 code = 2;
}

message Room
{
	int32 room_id = 1;
	string	name = 2;				//room's name
	int32 type = 3;					//room type
	int32 max_player_cnt = 4;			//max player cnt
	int32 player_cnt = 5;				//current player cnt
	int32 match_seat_way = 6;			//random or by order to give seat number
	int32 status = 7;					//room's status
	repeated Player players = 8;	//players in the room
	Player master = 9;				//room master
}

message ReqCreateRoom
{
	Room room = 1;
}
message ReqCreateRoomUc
{
	int32 code = 1;
	Room room = 2;
}
message ReqSearchRoom
{
	int32 roomid = 1;
}
message ReqSearchRoomUc
{
	int32 code = 1;
	Room room = 2;
}

message ReqEnterRoom
{
	int32 roomid = 1;
}

message ReqEnterRoomFast
{

}

message ReqEnterRoomBc
{
	int32 code = 1;
	Player player = 2;
	Room room = 3;
}
message ReqQuitRoom
{
	int32 roomid = 1;
}
message ReqQuitRoomBc
{
	int32 code = 1;
	Player player = 2;
}

message ReqReady
{
	int32 roomid = 1;
}
message ReqReadyBc
{
	int32 code = 1;
	Player player = 2;
}


//广播互动表情
message ReqEmotionBC
{
    int32 seatid = 1;
	int32 type = 2;
}
