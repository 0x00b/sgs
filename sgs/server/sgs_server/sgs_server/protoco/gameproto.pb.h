// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameproto.proto

#ifndef PROTOBUF_gameproto_2eproto_INCLUDED
#define PROTOBUF_gameproto_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_gameproto_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultstagCardsImpl();
void InitDefaultstagCards();
inline void InitDefaults() {
  InitDefaultstagCards();
}
}  // namespace protobuf_gameproto_2eproto
namespace proto {
namespace game {
class tagCards;
class tagCardsDefaultTypeInternal;
extern tagCardsDefaultTypeInternal _tagCards_default_instance_;
}  // namespace game
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::game::tagCards* Arena::Create< ::proto::game::tagCards>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace game {

enum Code {
  CODE_NULL = 0,
  Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Code_IsValid(int value);
const Code Code_MIN = CODE_NULL;
const Code Code_MAX = CODE_NULL;
const int Code_ARRAYSIZE = Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Code_descriptor();
inline const ::std::string& Code_Name(Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Code_descriptor(), value);
}
inline bool Code_Parse(
    const ::std::string& name, Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Code>(
    Code_descriptor(), name, value);
}
// ===================================================================

class tagCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.game.tagCards) */ {
 public:
  tagCards();
  virtual ~tagCards();

  tagCards(const tagCards& from);

  inline tagCards& operator=(const tagCards& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  tagCards(tagCards&& from) noexcept
    : tagCards() {
    *this = ::std::move(from);
  }

  inline tagCards& operator=(tagCards&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const tagCards& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const tagCards* internal_default_instance() {
    return reinterpret_cast<const tagCards*>(
               &_tagCards_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(tagCards* other);
  friend void swap(tagCards& a, tagCards& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline tagCards* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<tagCards>(NULL);
  }

  tagCards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<tagCards>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagCards& from);
  void MergeFrom(const tagCards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagCards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 card_list = 1;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 1;
  ::google::protobuf::int32 card_list(int index) const;
  void set_card_list(int index, ::google::protobuf::int32 value);
  void add_card_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card_list();

  // @@protoc_insertion_point(class_scope:proto.game.tagCards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_list_;
  mutable int _card_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_gameproto_2eproto::TableStruct;
  friend void ::protobuf_gameproto_2eproto::InitDefaultstagCardsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// tagCards

// repeated int32 card_list = 1;
inline int tagCards::card_list_size() const {
  return card_list_.size();
}
inline void tagCards::clear_card_list() {
  card_list_.Clear();
}
inline ::google::protobuf::int32 tagCards::card_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.tagCards.card_list)
  return card_list_.Get(index);
}
inline void tagCards::set_card_list(int index, ::google::protobuf::int32 value) {
  card_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.tagCards.card_list)
}
inline void tagCards::add_card_list(::google::protobuf::int32 value) {
  card_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.tagCards.card_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCards::card_list() const {
  // @@protoc_insertion_point(field_list:proto.game.tagCards.card_list)
  return card_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCards::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.tagCards.card_list)
  return &card_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace game
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::game::Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::Code>() {
  return ::proto::game::Code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gameproto_2eproto_INCLUDED
